-- ORACLE TABLE USER
create table USERS
(
    id          number generated by default as identity primary key,
    username    varchar2(100),
    password    varchar2(255) not null,
    email       varchar2(100) not null,
    phone       varchar2(20),
    job         varchar2(50),
    locked      number(1),
    invite_code varchar2(50),
    invited_by  number,
    active      varchar2(20) default 'ACTIVE' check ( active in ('ACTIVE', 'SUSPENDED', 'DELETED') ),
    created_at  timestamp    default current_timestamp,
    updated_at  timestamp    default current_timestamp,
    deleted_at  timestamp,
    created_by  varchar(100),
    updated_by  varchar(100),
    deleted_by  varchar(100)
);


-- ORACLE TABLE SUBSCRIPTION PLAN
create table SUBPLANS
(
    id              number generated by default as identity primary key,
    name            varchar2(100) default 'Free' not null,
    plan_ref        varchar2(255)                not null,
    description     clob,
    max_participate number        default 1      not null,
    price           number(11, 4)                not null,
    currency        varchar2(20)  default 'USD' check ( currency in ('USD', 'KHR', 'GBP', 'JPY', 'INR', 'CNY') ),
    billing_cycle   varchar2(20) check ( billing_cycle in ('MONTHLY', 'YEAR', 'DAY', 'WEEKLY') ),
    created_at      timestamp     default current_timestamp,
    updated_at      timestamp     default current_timestamp
);

-- ORACLE TABLE SUBSCRIPTION
create table SUBSCRIPTION
(
    id         number generated by default as identity primary key,
    user_id    number not null,
    plan_id    number not null,
    status     varchar2(20) check ( status in ('ACTIVE', 'CANCELLED', 'SUSPENDED', 'EXPIRED')),
    auto_renew number(1) default 1,
    is_trial   number(1) default 0,
    plan_start timestamp with time zone,
    plan_end   timestamp with time zone,
    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp,
    deleted_at timestamp,
    created_by varchar(100),
    updated_by varchar(100),
    deleted_by varchar(100),
    constraint subscription_userid foreign key (user_id) references USERS,
    constraint subscription_planid foreign key (plan_id) references SUBPLANS
);

-- CREATE TABLE INVOICE
create table INVOICES
(
    id              number generated by default as identity primary key,
    invoice_no      varchar2(200) not null,
    subscription_id number        not null,
    amount          number(11, 4) not null,
    currency        varchar2(20) default 'USD' check ( currency in ('USD', 'KHR', 'GBP', 'JPY', 'INR', 'CNY') ),
    dur_date        timestamp with time zone,
    status          varchar2(20) default 'PENDING' check ( status in ('PAID', 'CANCELLED', 'PENDING', 'OVERDUE') ),
    created_at      timestamp    default current_timestamp,
    updated_at      timestamp    default current_timestamp,
    deleted_at      timestamp,
    created_by      varchar(100),
    updated_by      varchar(100),
    deleted_by      varchar(100),
    constraint invoices_subscriptionid foreign key (subscription_id) references SUBSCRIPTION

);

-- CREATE TABLE PAYMENT
create table PAYMENTS
(
    id             number generated by default as identity primary key,
    user_id         number(1) not null ,
    invoice_id      number(1) not null ,
    reference      varchar2(200) not null,
    amount         number(11, 4) not null,
    currency       varchar2(20) default 'USD' check ( currency in ('USD', 'KHR', 'GBP', 'JPY', 'INR', 'CNY') ),
    payment_method varchar2(20) default 'USD' check ( payment_method in ('CASH', 'MASTER_CARD', 'PAYPAL', 'VISA', 'CRYPTO') ),
    street         varchar2(50),
    city           varchar2(50),
    state          varchar2(50),
    zip_code       integer,
    country        varchar2(50),
    created_at     timestamp    default current_timestamp,
    updated_at     timestamp    default current_timestamp,
    deleted_at     timestamp,
    created_by     varchar(100),
    updated_by     varchar(100),
    deleted_by     varchar(100),

    constraint payment_user_id foreign key (user_id) references USERS,
    constraint payment_invoice_id foreign key (invoice_id) references INVOICES

);

-- IMPROVE PERFORMANCE
create index usr_email on USERS (email);
create index usr_job on USERS (job);
create index subplan_name on SUBPLANS (name);
create index subplan_billing_cycle on SUBPLANS (billing_cycle);
create index usr_username on USERS (username);
create index payment_ref on PAYMENTS (reference);
create index invoice_invoiceno on INVOICES (invoice_no);
create index subscript_userid on SUBSCRIPTION (user_id);
create index subscript_planid on SUBSCRIPTION (plan_id);
create index invite_code_idx on USERS (invite_code);

-- AUTO GENERATE ID FOR EACH ID IN PER TABLE
create sequence SEQ_USERS;
create sequence SEQ_INVOICES;
create sequence SEQ_PAYMENTS;
create sequence SEQ_SUBSCRIPTION;
create sequence SEQ_SUBPLANS;


